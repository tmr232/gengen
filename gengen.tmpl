{{define "package"}}
    //go:build !gengen

    // AUTOGENERATED DO NOT MODIFY

    package {{.PackageName}}

    {{.Imports}}

    {{join .Functions "\n"}}

{{end}}


{{define "function"}}
    func {{.Name}}{{trimPrefix .Signature "func"}} {
        {{range $name, $type := .State}}
            var {{$name}} {{$type}}
        {{end}}
        __next := 0
        return &gengen.GeneratorFunction[{{.ReturnType}}]{
            Advance: func() (__hasValue bool, __value {{.ReturnType}}, __err error) {
                switch __next {
                {{range .StateIndices}}
                case {{.}}:
                    goto {{template "next" .}}
                {{end}}
                }
                {{template "next" 0}}:

                {{.Body}}
            },
        }
    }
{{end}}

{{define "return"}}
    __err = {{.ReturnValue}}
    return
{{end}}

{{define "yield"}}
    __hasValue = true
    __value = {{.YieldValue}}
    __next = {{.Next}}
    return

{{template "next" .Next}}:
{{end}}


{{define "forever"}}
    __Head{{.Loop}}:
    {{.Body}}
    goto __Head{{.Loop}}
{{end}}

{{define "for"}}
    {{.Init}}
__Head{{.Loop}}:
    if {{.Cond}} {
        goto __Body{{.Loop}}
    } else {
        goto __Exit{{.Loop}}
    }
__Body{{.Loop}}:
    {{.Body}}
    {{.Post}}
    goto __Head{{.Loop}}
__Exit{{.Loop}}:
{{end}}

{{define "if"}}
    {{.Init}}
    if {{.Cond}} {
        goto __Then{{.If}}
    } else {
        goto __Else{{.If}}
    }
__Then{{.If}}:
    {{.Body}}
    goto __After{{.If}}
__Else{{.If}}:
    {{.Else}}
    goto __After{{.If}}
__After{{.If}}:
{{end}}

{{define "next"}}
__Next{{.}}
{{- end}}
